# Задача № 39
# Даны два массива чисел. Требуется вывести те 
# элементы первого массива (в том порядке, в каком 
# они идут в первом массиве), которых нет во втором массиве. 
# Пользователь вводит число N - количество элементов в первом 
# массиве, затем N чисел - элементы массива. Затем 
# число M - количество элементов во втором массиве. 
# Затем элементы второго массива
# Ввод:             Вывод:
#   7               3 3 2 12
# 3 1 3 4 2 4 12
#   6
# 4 15 43 1 15 1 (каждое число вводится с новой строки)

#import random
# Первый вариант решения
# n = int(input('Введите количество элементов в первом массиве: '))
# numb1 = []
# for _ in range(n):
#     numb1.append(random.randint(0, 9))

# m = int(input('Введите количество элементов во втором массиве: '))
# numb2 = []
# for _ in range(m):
#     numb2.append(random.randint(0, 9))

# print(*numb1)
# print(*numb2)

# for i in numb1:
#     if i not in numb2:
#         print(i, end= ' ')
        
# Второй вариант решения
# list1 = [random.randint(0,10) for _ in range(int(input('Введите размер первого массива: ')))]
# list2 = [random.randint(0,10) for _ in range(int(input('Введите размер второго массива: ')))]
# print(f'{list1 = }\n{list2 = }\n')
# print(new_list := [i for i in list1 if i not in list2])    





# Задача № 41
# Дан массив, состоящий из целых чисел. Напишите программу, 
# которая в данном массиве определит количество элементов, 
# у которых два соседних и, при этом, оба соседних элемента 
# меньше данного. Сначала вводится число N — количество элементов 
# в массиве Далее записаны N чисел — элементы массива. 
# Массив состоит из целых чисел.
# Ввод:                     Ввод:
#   5                          5
# 1 2 3 4 5                 1 5 1 5 1
# Вывод:                    Вывод:
#   0                           2
# (каждое число вводится с новой строки)

# import random
# n_num = int(input("Введите размер массива: "))
# my_array = [random.randint(1, 100) for i in range(n_num)]
# print(f" {my_array}")
# count = 0
# for i in range(1, n_num -1):
#     if my_array[i - 1] < my_array[i] > my_array[i + 1]:
#         count += 1
# print(count)       




# Задача № 43
# Дан список чисел. Посчитайте, сколько в нем пар элементов, 
# равных друг другу. Считается, что любые два элемента, 
# равные друг другу образуют одну пару, которую необходимо посчитать. 
# Вводится список чисел. Все числа списка находятся на разных строках.
# Ввод:               Вывод:
# 1 2 3 2 3             2

#import random
#n = int(input("Введите размер списка: "))
#arr = [random.randint(1, 20) for i in range(n)]
# arr = [5,5,5,5,5]
# dictionary = {i:arr.count(i) for i in arr}
# print(arr)
# #print(dictionary)
# counter = 0

# def finddouble(n):
#     if n == 1:
#         return 0
#     return n - 1 + finddouble(n - 1)

# for i in dictionary.values():
#     if i > 1:
#         counter += finddouble(i)
# print(counter)




# Задача № 45
# Два различных натуральных числа n и m называются дружественными, 
# если сумма делителей числа n (включая 1, но исключая само n) 
# равна числу m и наоборот. Например, 220 и 284 – дружественные числа. 
# По данному числу k выведите все пары дружественных чисел, каждое 
# из которых не превосходит k. Программа получает на вход одно 
# натуральное число k, не превосходящее 105. Программа должна вывести 
# все пары дружественных чисел, каждое из которых не превосходит k. 
# Пары необходимо выводить по одной в строке, разделяя пробелами. 
# Каждая пара должна быть выведена только один раз 
# (перестановка чисел новую пару не дает).
# Ввод: Вывод:
# 300 220 284

dd = {}
div = []
sum_n = 0
n = 220
temp_n = 2
while temp_n <= n:
    temp = 0
    if n % temp_n == 0:
        temp = n / temp_n
        div.append(temp)
        sum_n += temp
        temp_n += 1
    else:
        temp_n += 1
dd[n] = sum_n
print(n)
print(*div)
print(sum_n)
print(dd)